import { FunctionComponent, useMemo } from 'react';
import { ParsedCve } from '../../../types/CVE.types';
import { Card, Typography } from '@mui/material';
import { SeverityType } from '../../../types/CVSS.enums';
import { SeverityGauge } from '../../../components/organisms/SeverityGauge';
import { CveScoreGaugesGrid } from './CveScoreGaugesGrid';

type Props = {
  cve: ParsedCve;
};

export const CveScoreCard: FunctionComponent<Props> = ({ cve }) => {
  const baseSeverityLabel = useMemo(() => {
    if (cve.metrics?.baseSeverity === SeverityType.NOT_DEFINED) {
      return undefined;
    }

    return cve.metrics?.baseSeverity;
  }, [cve]);

  if (!cve?.metrics?.baseScore) {
    return null;
  }

  return (
    <Card
      elevation={1}
      sx={{
        height: '100%',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        gap: '1rem',
        padding: '1rem',
      }}
    >
      <Typography variant='h4' gutterBottom>
        CVSS Score
      </Typography>

      <SeverityGauge value={cve.metrics?.baseScore} label={baseSeverityLabel} />

      <CveScoreGaugesGrid cve={cve} />
    </Card>
  );
};
