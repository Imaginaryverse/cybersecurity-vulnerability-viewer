import { FunctionComponent, useEffect, useState } from 'react';
import { Typography, Grid, Divider, Box } from '@mui/material';
import { useLocation, useParams } from 'react-router-dom';
import { ParsedCve } from '../../types/CVE.types';
import { Page } from '../../components/atoms/Page/Page';
import { CveScoreCard } from './components/CveScoreCard';
import { CveSummaryCard } from './components/CveSummaryCard';
import { CveReferencesList } from './components/CveReferencesList';
import { CveVectorsGrid } from './components/CveVectorsGrid';
import { CveConfigurationsList } from './components/CveConfigurationsList';
import { CveWeaknessesList } from './components/CveWeaknessesList';
import { LoadingSpinner } from '../../components/atoms/LoadingSpinner/LoadingSpinner';
import { useVulnerabilities } from '../../app/__MockVulnerabilitiesProvider__';

export const VulnerabilityDetailsPage: FunctionComponent = () => {
  const { id = '' } = useParams();
  const location = useLocation();

  const [cve, setCve] = useState<ParsedCve | undefined>(location.state?.cve);

  const {
    cve: data,
    fetchCve,
    isLoadingCve,
    errorLoadingCve,
  } = useVulnerabilities();

  useEffect(() => {
    if (errorLoadingCve) {
      return;
    }

    if (!location.state?.cve?.id || location.state?.cve?.id !== id) {
      fetchCve(id);
      return;
    }

    setCve(location.state.cve as ParsedCve);
  }, [location.state, id, errorLoadingCve, fetchCve]);

  useEffect(() => {
    if (!data) {
      return;
    }

    setCve(data.cves[0]);
  }, [data]);

  return (
    <Page>
      {isLoadingCve && <LoadingSpinner />}

      {errorLoadingCve && <Typography>{errorLoadingCve.message}</Typography>}

      {!!cve && (
        <Box
          sx={{
            display: 'flex',
            flexDirection: 'column',
            gap: '1.5rem',
          }}
        >
          <Grid container spacing={2}>
            <Grid item xs={12} md={6}>
              <CveSummaryCard cve={cve} />
            </Grid>
            {cve?.metrics?.baseScore && (
              <Grid item xs={12} md={6}>
                <CveScoreCard cve={cve} />
              </Grid>
            )}
          </Grid>

          <Divider />

          <CveVectorsGrid cve={cve} />

          <CveWeaknessesList cve={cve} />

          <CveConfigurationsList cve={cve} />

          <CveReferencesList cve={cve} />
        </Box>
      )}
    </Page>
  );
};
