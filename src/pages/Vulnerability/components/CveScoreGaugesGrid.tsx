import { FunctionComponent } from 'react';
import { Grid } from '@mui/material';
import { SeverityGauge } from '../../../components/organisms/SeverityGauge';
import { ParsedCve } from '../../../types/CVE.types';
import { camelCaseToTitleCase } from '../../../utils/stringUtils';

type Props = {
  cve: ParsedCve;
};

const SIZE = 150;

export const CveScoreGaugesGrid: FunctionComponent<Props> = ({ cve }) => {
  if (!cve?.metrics?.scores) {
    return null;
  }

  const scoresWithValues = Object.entries(cve.metrics.scores).filter(
    ([name, value]) => name !== 'baseScore' && value
  );

  return (
    <Grid
      container
      spacing={{ xs: 2, md: 4 }}
      columns={{ xs: 2, sm: 3, md: 4 }}
      justifyContent='space-evenly'
    >
      {scoresWithValues.map(([name, value]) => (
        <Grid key={name} item>
          <SeverityGauge
            label={camelCaseToTitleCase(name.replace('Score', ''))}
            value={value}
            size={SIZE}
          />
        </Grid>
      ))}
    </Grid>
  );
};
