/* eslint-disable react-hooks/exhaustive-deps */
import { FunctionComponent, useEffect, useState } from 'react';
import { Typography, CircularProgress, Box } from '@mui/material';
import { useLocation, useParams } from 'react-router-dom';
import { Vulnerability } from '../../types';
import { useCveByIdQuery } from '../../api/hooks/useCveQuery';

export const VulnerabilityPage: FunctionComponent = () => {
  const { id = '' } = useParams();
  const location = useLocation();

  const [vulnerability, setVulnerability] = useState<Vulnerability | undefined>(
    undefined
  );

  const { isLoading, isFetching, error, data, refetch } = useCveByIdQuery(id);

  useEffect(() => {
    if (location.state?.vulnerability) {
      setVulnerability(location.state.vulnerability as Vulnerability);
      return;
    }

    refetch();
  }, [id, location.state]);

  useEffect(() => {
    if (!data) {
      return;
    }

    setVulnerability(data);
  }, [data]);

  return (
    <>
      <Typography variant='h1' component='h1'>
        CVE: {id}
      </Typography>

      {(isLoading || isFetching) && <CircularProgress />}

      {error && <Typography>{error.message}</Typography>}

      {!!vulnerability && (
        <Box sx={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
          <Typography>{vulnerability.id}</Typography>
          <Typography>{vulnerability.description}</Typography>
        </Box>
      )}
    </>
  );
};
