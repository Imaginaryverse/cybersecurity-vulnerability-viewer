/* eslint-disable react-hooks/exhaustive-deps */
import { FunctionComponent, useEffect, useState, useMemo } from 'react';
import { Typography, CircularProgress, Box } from '@mui/material';
import { useLocation, useParams } from 'react-router-dom';
import { useCveByIdQuery } from '../../api/hooks/useCveQuery';
import { ParsedCve } from '../../types/CVE.types';

export const VulnerabilityPage: FunctionComponent = () => {
  const { id = '' } = useParams();
  const location = useLocation();

  const [cve, setCve] = useState<ParsedCve | undefined>(undefined);

  const { isLoading, isFetching, error, data, refetch } = useCveByIdQuery(id);

  useEffect(() => {
    if (location.state?.vulnerability) {
      setCve(location.state.vulnerability as ParsedCve);
      return;
    }

    refetch();
  }, [id, location.state]);

  useEffect(() => {
    if (!data) {
      return;
    }

    setCve(data);
  }, [data]);

  const description = useMemo(() => {
    if (!cve) {
      return '';
    }

    return cve.descriptions.find(d => d.lang === 'en')?.value ?? '';
  }, [cve]);

  return (
    <>
      <Typography variant='h1' component='h1'>
        CVE: {id}
      </Typography>

      {(isLoading || isFetching) && <CircularProgress />}

      {error && <Typography>{error.message}</Typography>}

      {!!cve && (
        <Box sx={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
          <Typography>{cve.id}</Typography>
          <Typography>{description}</Typography>
        </Box>
      )}
    </>
  );
};
