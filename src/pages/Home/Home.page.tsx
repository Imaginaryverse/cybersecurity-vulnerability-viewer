import { FunctionComponent, useEffect } from 'react';
import { Button, Card, Link, Typography } from '@mui/material';
import { Page } from '../../components/atoms/Page/Page';
import { useCvesByTimeSpanQuery } from '../../api/hooks/useCveQuery';
import { SearchResultsTable } from '../../components/organisms/ResultsTable/ResultsTable';
import { LoadingSpinner } from '../../components/atoms/LoadingSpinner/LoadingSpinner';
import { useNavigate } from 'react-router-dom';

export const HomePage: FunctionComponent = () => {
  const navigate = useNavigate();

  const { isLoading, error, data, isPreviousData, refetch } =
    useCvesByTimeSpanQuery({
      timeSpan: 'Last 48 Hours',
      pageIndex: 0,
    });

  useEffect(() => {
    refetch();
  }, [refetch]);

  return (
    <Page>
      <Typography variant='h2' component='h2'>
        VULN
      </Typography>

      <Card
        sx={{ paddingTop: '1rem', paddingBottom: '2rem', paddingX: '1rem' }}
      >
        <Typography variant='h4' component='h3' gutterBottom>
          Search by keyword
        </Typography>

        <Typography variant='body1' component='p' gutterBottom>
          Search for vulnerabilities by keyword. We recommend using the{' '}
          <Link
            href='https://cwe.mitre.org/'
            target='_blank'
            rel='noopener noreferrer'
          >
            Common Weakness Enumeration (CWE)
          </Link>{' '}
          identifier for best results.
        </Typography>

        <Button
          onClick={() => navigate('/vulnerability')}
          variant='contained'
          sx={{
            marginTop: '1rem',
            width: 'fit-content',
          }}
        >
          Search by keyword
        </Button>
      </Card>

      <Typography variant='h5' component='h3'>
        Latest entries (last 48 hours)
      </Typography>

      {isLoading && (
        <Typography variant='body1' component='p'>
          Loading latest vulnerabilities...
        </Typography>
      )}

      {isLoading && <LoadingSpinner />}

      {!isLoading && !!error && (
        <Typography variant='body1' component='p'>
          Error loading latest vulnerabilities: {error.message}
        </Typography>
      )}

      {!isLoading && !!data && (
        <SearchResultsTable
          data={data}
          defaultOrderBy='published'
          defaultOrder='desc'
          onPageChange={() => null}
          disabled={isLoading || isPreviousData}
        />
      )}
    </Page>
  );
};
