import { ParsedSearchResponse, Vulnerability } from '../../types';
import { useQuery } from 'react-query';
import { fetchCveById, fetchCvesByKeyword } from '../api';

/**
 * Hook to fetch CVE by id
 * @param id CVE id
 */
export function useCveByIdQuery(id: string) {
  const { isLoading, isFetching, error, data, refetch } = useQuery<
    Vulnerability,
    Error
  >(['cve', id], () => fetchCveById(id), {
    enabled: false,
  });

  return {
    isLoading,
    isFetching,
    error,
    data,
    refetch,
  };
}

/**
 * Hook to fetch CVEs by keyword
 * @param keyword CVE keyword
 * @param pageIndex Page index
 */
export function useCvesByKeywordQuery(keyword: string, pageIndex: number) {
  const { isLoading, isFetching, error, data, refetch, isPreviousData } =
    useQuery<ParsedSearchResponse, Error>(
      ['cves', keyword, pageIndex],
      () => fetchCvesByKeyword(keyword, pageIndex),
      {
        enabled: false,
      }
    );

  return {
    isLoading,
    isFetching,
    error,
    data,
    refetch,
    isPreviousData,
  };
}
