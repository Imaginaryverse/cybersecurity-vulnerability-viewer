/* eslint-disable @typescript-eslint/no-empty-function */
import { ThemeProvider, createTheme } from '@mui/material';
import { createContext, useMemo, useState } from 'react';

export const ColorModeContext = createContext({ toggleColorMode: () => {} });

type ColorModeProviderProps = {
  children: React.ReactNode;
};

export const ColorModeProvider = ({ children }: ColorModeProviderProps) => {
  const [mode, setMode] = useState<'light' | 'dark'>('dark');

  const colorMode = useMemo(
    () => ({
      toggleColorMode: () => {
        setMode(prevMode => (prevMode === 'light' ? 'dark' : 'light'));
      },
    }),
    []
  );

  const theme = useMemo(
    () =>
      createTheme({
        palette: {
          mode,
          background: {
            default: mode === 'light' ? '#F6F6F6' : '#121212',
            paper: mode === 'light' ? '#FFF' : '#1e1e1e',
          },
        },
      }),
    [mode]
  );

  return (
    <ColorModeContext.Provider value={colorMode}>
      <ThemeProvider theme={theme}>{children}</ThemeProvider>
    </ColorModeContext.Provider>
  );
};
