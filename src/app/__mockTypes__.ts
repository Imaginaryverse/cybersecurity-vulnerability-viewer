import { ParsedApiResponse } from '../types/CVE.types';
import { TimeSpanType } from '../types/TimeSpan.types';

export type VulnerabilitiesContextType = {
  cves?: ParsedApiResponse;
  fetchCves: (keyword: string, timeSpan: TimeSpanType, pageIdx: number) => void;
  isLoadingCves: boolean;
  errorLoadingCves: Error | null;

  cves48hours?: ParsedApiResponse;
  fetchCves48hours: (pageIdx: number) => void;
  isLoadingCves48hours: boolean;
  errorLoadingCves48hours: Error | null;

  cve?: ParsedApiResponse;
  fetchCve: (cveId: string) => void;
  isLoadingCve: boolean;
  errorLoadingCve: Error | null;
};

export type VulnerabilitiesProviderProps = {
  children: React.ReactNode;
};

export type VulnerabilitiesProviderState = {
  cves?: ParsedApiResponse;
  isLoadingCves: boolean;
  errorLoadingCves: Error | null;

  cves48hours?: ParsedApiResponse;
  isLoadingCves48hours: boolean;
  errorLoadingCves48hours: Error | null;

  cve?: ParsedApiResponse;
  isLoadingCve: boolean;
  errorLoadingCve: Error | null;
};
