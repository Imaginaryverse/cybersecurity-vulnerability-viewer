import { VectorItem } from '../types/CVE.types';
import { VECTOR_MAP } from './vectorMap';

export const isValidKeyword = (keyword: string) => keyword.trim().length >= 3;

export function camelCaseToTitleCase(str: string): string {
  const result = str.replace(/([A-Z])/g, ' $1');
  return result.charAt(0).toUpperCase() + result.slice(1);
}

export function parseVectorString(str: string): VectorItem[] {
  const keyValuePairs = str.split('/');
  const items: VectorItem[] = [];

  for (const pair of keyValuePairs) {
    const [vectorKey, valueKey] = pair.split(':');
    const vector = VECTOR_MAP.find(v => v.shorthand === vectorKey);

    if (!vector) {
      continue;
    }
    items.push({
      name: vector.name,
      value: vector.values[valueKey] || 'Unknown',
    });
  }

  return items;
}
