import { CVE, Vulnerability } from '../types';

export function parseCVE(cve: CVE): Vulnerability {
  const {
    id,
    published,
    lastModified,
    descriptions,
    references,
    sourceIdentifier,
  } = cve;

  const description = descriptions.filter(({ lang }) => lang === 'en')[0].value;
  const metrics = cve.metrics.cvssMetricV2[0];
  const cvss = metrics.cvssData;
  const weaknesses: string[] = cve.weaknesses
    .filter(({ description }) => description[0].lang === 'en')
    .map(({ description }) => description[0].value);

  return {
    id,
    lastModified,
    published,
    description,
    baseSeverity: metrics.baseSeverity,
    baseScore: cvss.baseScore,
    accessComplexity: cvss.accessComplexity,
    accessVector: cvss.accessVector,
    authentication: cvss.authentication,
    availabilityImpact: cvss.availabilityImpact,
    confidentialityImpact: cvss.confidentialityImpact,
    integrityImpact: cvss.integrityImpact,
    exploitabilityScore: metrics.exploitabilityScore,
    impactScore: metrics.impactScore,
    type: metrics.type,
    userInteractionRequired: metrics.userInteractionRequired,
    obtainAllPrivilege: metrics.obtainAllPrivilege,
    obtainOtherPrivilege: metrics.obtainOtherPrivilege,
    obtainUserPrivilege: metrics.obtainUserPrivilege,
    weaknesses,
    source: metrics.source,
    sourceIdentifier,
    references,
  };
}
