import { Box, CircularProgress, Typography } from '@mui/material';
import { FunctionComponent, useMemo } from 'react';
import { getSeverityColor } from '../../utils/colorUtils';

type GaugeProps = {
  value: number;
  label?: string;
  labelSize?: 'small' | 'medium' | 'large';
  labelPosition?: 'above' | 'inside' | 'below';
  size?: number;
};

export const SeverityGauge: FunctionComponent<GaugeProps> = ({
  value,
  label,
  labelSize = 'medium',
  labelPosition = 'inside',
  size = 200,
}) => {
  const labelFontSize = useMemo(() => {
    switch (labelSize) {
      case 'small':
        return '12px';
      case 'medium':
        return '16px';
      case 'large':
        return '20px';
      default:
        return '16px';
    }
  }, [labelSize]);

  const severityColor = useMemo(() => getSeverityColor(value), [value]);

  return (
    <Box
      sx={{
        position: 'relative',
        width: 'fit-content',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
      }}
    >
      {labelPosition === 'above' && !!label && (
        <Typography
          fontSize={labelFontSize}
          component='div'
          color='text.secondary'
          textAlign='center'
          maxWidth='100%'
          sx={{
            marginBottom: '0.5rem',
            zIndex: 2,
          }}
        >
          {label}
        </Typography>
      )}

      <Box
        sx={{
          position: 'relative',
          width: size,
          height: size,
          borderRadius: '50%',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center',
        }}
      >
        <CircularProgress
          variant='determinate'
          sx={{
            color: theme =>
              theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],
            position: 'absolute',
            zIndex: 0,
          }}
          size={size}
          thickness={5}
          value={100}
        />
        <CircularProgress
          variant='determinate'
          sx={{
            color: severityColor,
            position: 'absolute',
            zIndex: 1,
          }}
          size={size}
          thickness={5}
          value={value * 10}
        />
        <Box
          sx={{
            top: 0,
            left: 0,
            bottom: 0,
            right: 0,
            position: 'absolute',
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
          }}
        >
          <Typography variant='h6' component='div' color='text.primary'>
            {value}
          </Typography>

          {labelPosition === 'inside' && !!label && (
            <Typography
              fontSize={labelFontSize}
              component='div'
              color='text.secondary'
              textAlign='center'
              maxWidth='60%'
            >
              {label}
            </Typography>
          )}
        </Box>
      </Box>

      {labelPosition === 'below' && !!label && (
        <Typography
          fontSize={labelFontSize}
          component='div'
          color='text.secondary'
          textAlign='center'
          maxWidth='100%'
          sx={{
            marginTop: '0.5rem',
            zIndex: 2,
          }}
        >
          {label}
        </Typography>
      )}
    </Box>
  );
};
