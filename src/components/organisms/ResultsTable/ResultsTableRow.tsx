import React, { FunctionComponent, useCallback, useState } from 'react';
import { ParsedCve } from '../../../types/CVE.types';
import { useNavigate } from 'react-router-dom';
import {
  TableRow,
  TableCell,
  Collapse,
  Box,
  Typography,
  Link,
} from '@mui/material';
import { toHumanReadableDate } from '../../../utils/dateUtils';
import { tableCellStyles } from './styles/ResultsTable.styles';

type SearchResultsTableRowProps = {
  cve: ParsedCve;
};

export const ResultsTableRow: FunctionComponent<SearchResultsTableRowProps> = ({
  cve,
}) => {
  const navigate = useNavigate();
  const [isOpen, setIsOpen] = useState(false);

  const navigateToCveDetails = useCallback(() => {
    navigate(`/vulnerability/${cve.id}`, { state: { cve } });
  }, [navigate, cve]);

  const handleExpandClick = useCallback(() => {
    setIsOpen(!isOpen);
  }, [isOpen]);

  return (
    <React.Fragment>
      <TableRow
        hover
        onClick={handleExpandClick}
        sx={{
          '& > *': {
            borderBottom: 'unset',
          },
          cursor: 'pointer',
        }}
      >
        <TableCell sx={tableCellStyles}>
          <Link
            underline='hover'
            onClick={navigateToCveDetails}
            sx={{ cursor: 'pointer' }}
          >
            {cve.id}
          </Link>
        </TableCell>
        <TableCell sx={tableCellStyles}>
          {toHumanReadableDate(cve.published, true)}
        </TableCell>
        <TableCell sx={tableCellStyles}>
          {toHumanReadableDate(cve.lastModified, true)}
        </TableCell>
        <TableCell sx={tableCellStyles}>
          {cve.metrics?.baseScore ?? 'N/A'}
        </TableCell>
      </TableRow>
      <TableRow>
        <TableCell sx={{ paddingY: 0 }} colSpan={6}>
          <Collapse in={isOpen} timeout='auto' unmountOnExit>
            <Box sx={{ paddingY: 2 }}>
              <Typography variant='body2' component='div' gutterBottom>
                {cve.description}
              </Typography>
              <Typography variant='body2' gutterBottom component='div'>
                <b>Source:</b> {cve.sourceIdentifier}
              </Typography>
            </Box>
          </Collapse>
        </TableCell>
      </TableRow>
    </React.Fragment>
  );
};
