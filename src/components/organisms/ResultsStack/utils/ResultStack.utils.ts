import { ParsedCve } from '../../../../types/CVE.types';
import { SortOption } from '../types/ResultsStack.types';

export function sortCves(cves: ParsedCve[], sortOption: SortOption) {
  return cves.sort((a, b) => {
    switch (sortOption) {
      case 'CVE ID (A-Z)':
        return a.id.localeCompare(b.id);
      case 'CVE ID (Z-A)':
        return b.id.localeCompare(a.id);
      case 'Base Score (Low-High)':
        return (a.metrics?.baseScore ?? 0) - (b.metrics?.baseScore ?? 0);
      case 'Base Score (High-Low)':
        return (b.metrics?.baseScore ?? 0) - (a.metrics?.baseScore ?? 0);
      case 'Last Modified (Old-New)':
        return a.lastModified?.localeCompare(b.lastModified ?? '') ?? 0;
      case 'Last Modified (New-Old)':
        return b.lastModified?.localeCompare(a.lastModified ?? '') ?? 0;
      case 'Published (Old-New)':
        return a.published?.localeCompare(b.published ?? '') ?? 0;
      case 'Published (New-Old)':
        return b.published?.localeCompare(a.published ?? '') ?? 0;
      default:
        return 0;
    }
  });
}
